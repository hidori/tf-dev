resource "aws_security_group" "springboard-sg" {
  name   = "${terraform.workspace}-springboard-sg"
  vpc_id = aws_vpc.vpc.id
  ingress {
    from_port   = 22
    to_port     = 22
    protocol    = "tcp"
    cidr_blocks = ["0.0.0.0/0"]
  }
  egress {
    from_port   = 0
    to_port     = 0
    protocol    = "-1"
    cidr_blocks = ["0.0.0.0/0"]
  }
  tags = {
    Name = "${terraform.workspace}-web-sg"
  }
}

resource "aws_key_pair" "springboard-ssh" {
  key_name   = "${terraform.workspace}-springboard-ssh"
  public_key = "${var.ssh_public_key}"
}

resource "aws_instance" "springboard" {
  ami           = "ami-088da9557aae42f39"
  instance_type = "${var.springboard_instance_type}"
  key_name      = "${terraform.workspace}-springboard-ssh"
  vpc_security_group_ids = [
    "${aws_security_group.springboard-sg.id}"
  ]
  subnet_id                   = aws_subnet.public-subnet.id
  associate_public_ip_address = "true"
  ebs_block_device {
    device_name = "/dev/xvda"
    volume_type = "gp2"
    volume_size = 10
  }
  tags = {
    Name = "${terraform.workspace}-springboard"
  }
  provisioner "file" {
    source      = "springboard-provision.sh"
    destination = "/tmp/provision.sh"
    connection {
      type        = "ssh"
      host        = self.public_ip
      user        = "ubuntu"
      private_key = file(var.ssh_private_key_path)
    }
  }
  provisioner "remote-exec" {
    inline = [
      "chmod +x /tmp/provision.sh",
      "/tmp/provision.sh",
    ]

    connection {
      type        = "ssh"
      host        = self.public_ip
      user        = "ubuntu"
      private_key = file(var.ssh_private_key_path)
    }
  }
}

output "springboard-public_ip" {
  value = aws_instance.springboard.public_ip
}
